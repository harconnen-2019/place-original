import van from "vanjs-core";
import { Await } from "vanjs-ui";
import { API } from "./lib";

const { div, button, p } = van.tags;

/**
 * –ó–∞–∫—Ä—ã–≤–∞–µ—Ç –≤—Å–µ –±–ª–æ–∫–∏, –∫—Ä–æ–º–µ —Ç–µ–∫—É—â–µ–≥–æ
 * @param {*} currentAcc
 */
function allClose(currentAcc) {
  const accAll = document.getElementsByClassName("faq__accordion");

  for (const el of accAll) {
    if (currentAcc !== el) {
      el.classList.remove("active");
      const pnl = el.nextElementSibling;
      pnl.style.maxHeight = null;
    }
  }
}

/**
 * –û—Ç–∫—Ä—ã–≤–∞–µ—Ç –∏–ª–∏ –∑–∞–∫—Ä—ã–≤–∞–µ—Ç –ø–∞–Ω–µ–ª—å –±–ª–æ–∫–∞ —Å —Ç–µ–∫—Å—Ç–æ–º
 * @param {*} parentAcc
 */
function panelToggle(parentAcc) {
  const panel = parentAcc.nextElementSibling;
  if (panel.style.maxHeight) {
    panel.style.maxHeight = null;
  } else {
    panel.style.maxHeight = panel.scrollHeight + "px";
  }
}

/**
 * –í—ã–≤–æ–¥–∏—Ç —Å–ø–∏—Å–æ–∫ –≤–æ–ø—Ä–æ—Å–æ–≤ –∏ –æ—Ç–≤–µ—Ç–æ–≤
 * –ü—Ä–∏ –Ω–∞–∂–∞—Ç–∏–∏ –æ–ø—Ä–µ–¥–µ–ª—è–µ—Ç —Å—Ç–∏–ª–∏ –¥–ª—è —ç—Ñ—Ñ–µ–∫—Ç–∞ –∞–∫–∫–æ—Ä–¥–µ–æ–Ω–∞
 * –î–æ–±–∞–≤–ª—è—é—Ç—Å—è –¥–≤–∞ –ª–∏—à–Ω–∏—Ö DIV, –Ω–æ –±–µ–∑ –Ω–∏—Ö –∫–æ–¥ –Ω–µ –∑–∞—Ä–∞–±–æ—Ç–∞–µ—Ç
 * @returns NODE
 */
function ListFaq() {
  const fetchFaq = (str) =>
    fetch(API.FAQ + str, {
      method: API.METHOD_LIST,
    })
      .then((r) => r.json())
      .then((data) => data.data.faq_elements);

  /**
   * –ü–æ–ª—É—á–∞–µ—Ç —Å—Ç—Ä–æ–∫—É –∑–∞–ø—Ä–æ—Å–∞ –ø–æ API
   */
  const url = document
    .getElementsByClassName("faq")[0]
    .getAttribute("data-url");

  /**
   * –î–∞–Ω–Ω—ã–µ —Å —Å–µ—Ä–≤–µ—Ä–∞ –¥–æ–±–∞–≤–ª—è–µ—Ç –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
   */
  const data = van.state(fetchFaq(url));

  /**
   * –ü—Ä–∏ –Ω–∞–∂–∞—Ç–∏–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É –ø–µ—Ä–µ–∫–ª—é—á–∞–µ—Ç —Å—Ç–∏–ª–∏
   * –ü—Ä–æ—Ö–æ–¥–∏—Ç –≤—Å–µ –±–ª–æ–∫–∏ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è –∞–∫—Ç–∏–≤–Ω–æ–≥–æ —Å—Ç–∏–ª—è (–∑–∞–∫—Ä—ã—Ç—å –æ—Å—Ç–∞–ª—å–Ω—ã–µ)
   * @param {*} id
   */
  function handleChange(id) {
    const acc = document.getElementById(`acc-${id}`);
    acc.classList.toggle("active");

    allClose(acc);
    panelToggle(acc);
  }

  /**
   * –§–æ—Ä–º–∏—Ä—É–µ—Ç –≠–ª–µ–º–µ–Ω—Ç—ã –∏–∑ –º–∞—Å—Å–∏–≤–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞ –Ω–∞ —ç–∫—Ä–∞–Ω
   * @param {*} arr –ú–∞—Å—Å–∏–≤ –≤–æ–ø—Ä–æ—Å–æ–≤
   * @returns
   */
  function listFaq(arr) {
    return div(
      arr.map((el) =>
        div(
          button(
            {
              onclick: () => handleChange(el.id),
              class: "faq__accordion",
              id: `acc-${el.id}`,
            },
            el.question
          ),
          div({ class: "faq__panel" }, p(el.answer))
        )
      )
    );
  }

  return [
    () =>
      Await(
        {
          value: data.val,
          container: div,
          Loading: () => div({ class: "la-ball-clip-rotate la" }, div()),
          Error: () => "üôÄ Request failed.",
        },
        (faqs) => listFaq(faqs)
      ),
  ];
}

van.add(document.querySelector(".faq"), ListFaq());

/**
 * –≠–ª–µ–º–µ–Ω—Ç –∞–∫–∫–æ—Ä–¥–µ–æ–Ω–∞ —Å —Ñ–æ—Ä–º–æ–π
 */
const accForm = document.getElementById("acc-form");
accForm.addEventListener("click", function () {
  allClose(this);
  this.classList.toggle("active");
  panelToggle(this);
});
